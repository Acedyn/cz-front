---
name: Build and deploy to Amazon ECR

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

env:
  AWS_REGION: us-east-1

jobs:
  build:
    name: Build and push docker images

    strategy:
      matrix:
        include:
          - repo: cz-front
            docker: ./deploy/Dockerfile.dev
            kubectl_namespace: cz-alpha-stack
          - repo: cz-storybook
            docker: ./deploy/Dockerfile.storybook
            kubectl_namespace: cz-dev-stack

    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.ref_name }}
          NGINX_ADMIN_AUTH: ${{ secrets.NGINX_ADMIN_AUTH }}
        run: |
          docker build -t $ECR_REGISTRY/${{ matrix.repo }}:$IMAGE_TAG -t $ECR_REGISTRY/${{ matrix.repo }}:latest -f ${{ matrix.docker }} .
          docker push $ECR_REGISTRY/${{ matrix.repo }} --all-tags

      - name: Deploy to EKS cluster
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: rollout restart deployments.apps/${{ matrix.repo }}-deployment -n ${{ matrix.kubectl_namespace }}
